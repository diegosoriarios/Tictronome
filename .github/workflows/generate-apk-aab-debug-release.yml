name: Generate APK AAB (Upload - Create Artifact to Github Action)
env:
  main_project_module: app

on:
  push:
    branches:
    - 'release/**'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore/your_keystore.jks'
          encodedString: ${{ secrets.KEYSTORE }}
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'gradle'
      
      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build gradle project
        run: ./gradlew build

      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew app:bundleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      
      - name: Upload APK to Github Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app/build/outputs/app-release.apk
      
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          tag_name: releases
          release_name: Release ${{ github.event.repository.updated_at }}
          draft: false
          prerelease: false

      - name: Upload APK To Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/app-release.apk
          asset_name: app.apk
          asset_content_type: application/zip